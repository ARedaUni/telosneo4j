{
  "version": 3,
  "sources": ["../../demo-resources/demo-styles.js"],
  "sourcesContent": ["/****************************************************************************\r\n ** @license\r\n ** This demo file is part of yFiles for HTML 2.6.0.4.\r\n ** Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,\r\n ** 72070 Tuebingen, Germany. All rights reserved.\r\n **\r\n ** yFiles demo files exhibit yFiles for HTML functionalities. Any redistribution\r\n ** of demo files in source code or binary form, with or without\r\n ** modification, is not permitted.\r\n **\r\n ** Owners of a valid software license for a yFiles for HTML version that this\r\n ** demo is shipped with are allowed to use the demo source code as basis\r\n ** for their own yFiles for HTML powered applications. Use of such programs is\r\n ** governed by the rights and conditions as set out in the yFiles for HTML\r\n ** license agreement.\r\n **\r\n ** THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED\r\n ** WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n ** MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN\r\n ** NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\r\n ** TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n ** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n ** LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n ** NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n ** SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n **\r\n ***************************************************************************/\r\n/* eslint-disable jsdoc/check-param-names */\r\nimport {\r\n  DefaultEdgePathCropper,\r\n  DefaultLabelStyle,\r\n  EdgeSelectionIndicatorInstaller,\r\n  GraphComponent,\r\n  GraphOverviewCanvasVisualCreator,\r\n  GroupNodeLabelModel,\r\n  GroupNodeStyle,\r\n  HorizontalTextAlignment,\r\n  IGraph,\r\n  ILabelStyle,\r\n  INode,\r\n  Insets,\r\n  IRenderContext,\r\n  LabelShape,\r\n  OrientedRectangleIndicatorInstaller,\r\n  PolylineEdgeStyle,\r\n  RectangleIndicatorInstaller,\r\n  RectangleNodeStyle,\r\n  ScrollBarVisibility,\r\n  ShapeNodeShape,\r\n  ShapeNodeStyle,\r\n  Theme,\r\n  ThemeVariant,\r\n  VerticalTextAlignment\r\n} from 'yfiles'\r\nimport { colorSets as cs } from './demo-colors.js'\r\n\r\n/**\r\n * @typedef {CSN} ColorSetName\r\n */\r\n/**\r\n * @typedef {CS} ColorSet\r\n */\r\nexport const colorSets = cs\r\n\r\n/**\r\n * @typedef {Object} CssClassNames\r\n * @property {ColorSetName} [node]\r\n * @property {ColorSetName} [nodeLabel]\r\n * @property {ColorSetName} [edge]\r\n * @property {ColorSetName} [edgeLabel]\r\n * @property {ColorSetName} [group]\r\n * @property {ColorSetName} [groupLabel]\r\n */\r\n\r\n/**\r\n * @param {!string} arg\r\n * @returns {!ColorSetName}\r\n */\r\nexport function isColorSetName(arg) {\r\n  return arg in colorSets\r\n}\r\n\r\n/**\r\n * Initializes graph defaults with nicely configured built-in yFiles styles.\r\n *\r\n * @param {!IGraph} graph The graph on which the default styles and style-related setting are set.\r\n * @param theme Optional color set names for all the demo styles. The default is 'demo-orange'.\r\n * @param foldingEnabled whether to use collapsable group node style\r\n * @param extraCropLength the extra crop length for the DefaultEdgePathCropper.\r\n * @param shape the optional shape of the node style, if undefined a RectangularNodeStyle is used.\r\n * @param {!object} undefined\r\n */\r\nexport function initDemoStyles(\r\n  graph,\r\n  { theme = {}, foldingEnabled = false, extraCropLength = 2.0, shape = undefined } = {}\r\n) {\r\n  if (typeof theme === 'string') {\r\n    theme = { node: theme, edge: theme, group: theme }\r\n  }\r\n\r\n  theme.node = theme.node || 'demo-orange'\r\n  theme.nodeLabel = theme.nodeLabel || theme.node\r\n  theme.edge = theme.edge || theme.node || 'demo-orange'\r\n  theme.edgeLabel = theme.edgeLabel || theme.edge\r\n  theme.group = theme.group || 'demo-palette-12'\r\n  theme.groupLabel = theme.groupLabel || theme.group\r\n\r\n  graph.nodeDefaults.style = shape\r\n    ? createDemoShapeNodeStyle(shape, theme.node)\r\n    : createDemoNodeStyle(theme.node)\r\n  graph.nodeDefaults.labels.style = createDemoNodeLabelStyle(theme.nodeLabel)\r\n\r\n  graph.groupNodeDefaults.style = createDemoGroupStyle({\r\n    colorSetName: theme.group,\r\n    foldingEnabled\r\n  })\r\n  graph.groupNodeDefaults.labels.style = createDemoGroupLabelStyle(theme.groupLabel)\r\n  graph.groupNodeDefaults.labels.layoutParameter =\r\n    new GroupNodeLabelModel().createTabBackgroundParameter()\r\n\r\n  graph.edgeDefaults.style = createDemoEdgeStyle({ colorSetName: theme.edge })\r\n  graph.decorator.portDecorator.edgePathCropperDecorator.setImplementation(\r\n    new DefaultEdgePathCropper({ cropAtPort: false, extraCropLength })\r\n  )\r\n  graph.edgeDefaults.labels.style = createDemoEdgeLabelStyle(theme.edgeLabel)\r\n}\r\n\r\n/**\r\n * Creates a new rectangular node style whose colors match the given well-known CSS style.\r\n * @param {!ColorSetName} [colorSetName=demo-orange]\r\n * @returns {!RectangleNodeStyle}\r\n */\r\nexport function createDemoNodeStyle(colorSetName = 'demo-orange') {\r\n  return new RectangleNodeStyle({\r\n    fill: colorSets[colorSetName].fill,\r\n    stroke: `1.5px ${colorSets[colorSetName].stroke}`,\r\n    cornerStyle: 'round',\r\n    cornerSize: 3.5\r\n  })\r\n}\r\n\r\n/**\r\n * Creates a new node style with the given shape whose colors match the given well-known CSS style.\r\n * @param {!(ShapeNodeShape|ShapeNodeShapeStringValues)} shape\r\n * @param {!ColorSetName} [colorSetName=demo-orange]\r\n * @returns {!ShapeNodeStyle}\r\n */\r\nexport function createDemoShapeNodeStyle(shape, colorSetName = 'demo-orange') {\r\n  return new ShapeNodeStyle({\r\n    shape,\r\n    fill: colorSets[colorSetName].fill,\r\n    stroke: `1.5px ${colorSets[colorSetName].stroke}`\r\n  })\r\n}\r\n\r\n/**\r\n * Creates a new polyline edge style whose colors match the given well-known CSS style.\r\n * @param {!object} undefined\r\n * @returns {!PolylineEdgeStyle}\r\n */\r\nexport function createDemoEdgeStyle({ colorSetName = 'demo-orange', showTargetArrow = true } = {}) {\r\n  const edgeColor = colorSets[colorSetName].stroke\r\n  return new PolylineEdgeStyle({\r\n    stroke: `1.5px ${edgeColor}`,\r\n    targetArrow: showTargetArrow ? `${edgeColor} small triangle` : 'none'\r\n  })\r\n}\r\n\r\n/**\r\n * Creates a new node label style whose colors match the given well-known CSS style.\r\n * @param {!ColorSetName} [colorSetName=demo-orange]\r\n * @returns {!DefaultLabelStyle}\r\n */\r\nexport function createDemoNodeLabelStyle(colorSetName = 'demo-orange') {\r\n  const labelStyle = new DefaultLabelStyle()\r\n  labelStyle.shape = LabelShape.ROUND_RECTANGLE\r\n  labelStyle.backgroundFill = colorSets[colorSetName].nodeLabelFill\r\n  labelStyle.textFill = colorSets[colorSetName].text\r\n  labelStyle.verticalTextAlignment = VerticalTextAlignment.CENTER\r\n  labelStyle.horizontalTextAlignment = HorizontalTextAlignment.CENTER\r\n  labelStyle.insets = new Insets(4, 2, 4, 1)\r\n  return labelStyle\r\n}\r\n\r\n/**\r\n * Creates a new edge label style whose colors match the given well-known CSS style.\r\n * @param {!ColorSetName} [colorSetName=demo-orange]\r\n * @returns {!DefaultLabelStyle}\r\n */\r\nexport function createDemoEdgeLabelStyle(colorSetName = 'demo-orange') {\r\n  const labelStyle = new DefaultLabelStyle()\r\n  labelStyle.shape = LabelShape.ROUND_RECTANGLE\r\n  labelStyle.backgroundFill = colorSets[colorSetName].edgeLabelFill\r\n  labelStyle.textFill = colorSets[colorSetName].text\r\n  labelStyle.verticalTextAlignment = VerticalTextAlignment.CENTER\r\n  labelStyle.horizontalTextAlignment = HorizontalTextAlignment.CENTER\r\n  labelStyle.insets = new Insets(4, 2, 4, 1)\r\n  return labelStyle\r\n}\r\n\r\n/**\r\n * Creates a new group label style whose colors match the given well-known CSS style.\r\n * @param {!ColorSetName} [colorSetName=demo-palette-12]\r\n * @returns {!ILabelStyle}\r\n */\r\nexport function createDemoGroupLabelStyle(colorSetName = 'demo-palette-12') {\r\n  return new DefaultLabelStyle({\r\n    verticalTextAlignment: 'center',\r\n    horizontalTextAlignment: 'left',\r\n    clipText: false,\r\n    wrapping: 'character-ellipsis',\r\n    textFill: colorSets[colorSetName].nodeLabelFill\r\n  })\r\n}\r\n\r\n/**\r\n * Creates a new group node style whose colors match the given well-known CSS style.\r\n * @param {!object} undefined\r\n * @returns {!GroupNodeStyle}\r\n */\r\nexport function createDemoGroupStyle({ colorSetName = 'demo-palette-12', foldingEnabled = false }) {\r\n  return new GroupNodeStyle({\r\n    cssClass: 'demo-group-style',\r\n    groupIcon: foldingEnabled ? 'minus' : 'none',\r\n    folderIcon: 'plus',\r\n    tabFill: foldingEnabled ? colorSets[colorSetName].nodeLabelFill : colorSets[colorSetName].fill,\r\n    stroke: `2px solid ${colorSets[colorSetName].fill}`,\r\n    tabBackgroundFill: foldingEnabled ? colorSets[colorSetName].fill : null,\r\n    tabPosition: foldingEnabled ? 'top-trailing' : 'top',\r\n    tabWidth: 30,\r\n    tabHeight: 20,\r\n    tabInset: 3,\r\n    iconOffset: 2,\r\n    iconSize: 14,\r\n    iconForegroundFill: colorSets[colorSetName].fill,\r\n    hitTransparentContentArea: true\r\n  })\r\n}\r\n\r\n/**\r\n * The class provides functionality for custom style of overview control.\r\n */\r\nexport class DemoStyleOverviewPaintable extends GraphOverviewCanvasVisualCreator {\r\n  /**\r\n   * @param {!IRenderContext} renderContext\r\n   * @param {!CanvasRenderingContext2D} ctx\r\n   * @param {!INode} node\r\n   */\r\n  paintNode(renderContext, ctx, node) {\r\n    ctx.fillStyle = 'rgb(128, 128, 128)'\r\n    const layout = node.layout\r\n    ctx.fillRect(layout.x, layout.y, layout.width, layout.height)\r\n  }\r\n\r\n  /**\r\n   * @param {!IRenderContext} renderContext\r\n   * @param {!CanvasRenderingContext2D} ctx\r\n   * @param {!INode} node\r\n   */\r\n  paintGroupNode(renderContext, ctx, node) {\r\n    ctx.fillStyle = 'rgb(211, 211, 211)'\r\n    ctx.strokeStyle = 'rgb(211, 211, 211)'\r\n    ctx.lineWidth = 4\r\n    const { x, y, width, height } = node.layout\r\n    ctx.strokeRect(x, y, width, height)\r\n    ctx.fillRect(x, y, width, 22)\r\n    ctx.lineWidth = 1\r\n  }\r\n}\r\n\r\n/**\r\n * Applies the default demo theme to the {@link GraphComponent}.\r\n * @param {!GraphComponent} graphComponent\r\n * @param {!object} themeOptions\r\n */\r\nexport function applyDemoTheme(graphComponent, themeOptions = {}) {\r\n  const theme = new Theme({\r\n    variant: 'simple-round',\r\n    scale: 1.4,\r\n    primaryColor: '#38434f',\r\n    backgroundColor: '#FFF',\r\n    ...themeOptions\r\n  })\r\n  graphComponent.theme = theme\r\n  // use hatch selection for better compatibility with arbitrary item colors\r\n  graphComponent.resources.set(\r\n    RectangleIndicatorInstaller.SELECTION_TEMPLATE_KEY,\r\n    theme.hatchRectangle\r\n  )\r\n  graphComponent.resources.set(\r\n    OrientedRectangleIndicatorInstaller.SELECTION_TEMPLATE_KEY,\r\n    theme.hatchRectangle\r\n  )\r\n  graphComponent.resources.set(EdgeSelectionIndicatorInstaller.STROKE_KEY, theme.hatchStroke)\r\n\r\n  graphComponent.horizontalScrollBarPolicy = ScrollBarVisibility.AS_NEEDED_DYNAMIC\r\n  graphComponent.verticalScrollBarPolicy = ScrollBarVisibility.AS_NEEDED_DYNAMIC\r\n}\r\n"],
  "mappings": "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",
  "names": ["colorSets"]
}
