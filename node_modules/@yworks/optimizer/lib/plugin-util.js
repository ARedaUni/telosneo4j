const minimatch = require('minimatch')
const logger = require('./logger')

function isNodeModule(modulePath) {
  return /node_modules/.test(modulePath)
}

function isYfilesModule(modulePath, moduleSource) {
  return (
    !/[/\\]yfiles\.css/.test(modulePath) &&
    (/node_modules[/\\]yfiles/.test(modulePath) ||
      (moduleSource && moduleSource.includes('This file is part of yFiles for HTML')))
  )
}

function shouldIgnore(options, modulePath) {
  const match = options.ignore.some(ignore => {
    if (typeof ignore === 'string') {
      return minimatch(modulePath, ignore, { matchBase: true })
    } else if (ignore instanceof RegExp) {
      return ignore.test(modulePath)
    } else {
      logger.warn(`Unexpected ignore item ${ignore}`)
    }
  })
  if (match) {
    logger.info(`Ignoring ${modulePath}`)
    return true
  }
  return false
}

module.exports = {
  shouldIgnore,
  isNodeModule,
  isYfilesModule
}
